# Generated by Django 3.0.3 on 2020-03-20 11:22

import django.contrib.sites.managers
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import stdimage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('image', stdimage.models.StdImageField(blank=True, null=True, upload_to='records')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('record_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Record')),
                ('type', models.CharField(blank=True, choices=[('conference', 'Conference'), ('hackathon', 'Hackathon'), ('workshop', 'Workshop'), ('seminar', 'Seminar'), ('other', 'Other')], max_length=20, null=True)),
                ('url', models.URLField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            bases=('core.record',),
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('record_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Record')),
                ('date', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'news',
            },
            bases=('core.record',),
        ),
        migrations.CreateModel(
            name='People',
            fields=[
                ('record_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Record')),
                ('affiliation', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'people',
            },
            bases=('core.record',),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('record_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Record')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('url', models.URLField(blank=True, max_length=255, null=True)),
            ],
            bases=('core.record',),
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('record_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Record')),
                ('url', models.URLField(blank=True, max_length=255, null=True)),
            ],
            bases=('core.record',),
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('record_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Record')),
                ('slug', models.CharField(db_index=True, max_length=100)),
                ('position', models.PositiveSmallIntegerField(blank=True, db_index=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Article')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
            options={
                'ordering': ['position', 'title'],
            },
            bases=('core.record',),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('on_site', django.contrib.sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.AddConstraint(
            model_name='article',
            constraint=models.UniqueConstraint(fields=('site', 'slug'), name='site_slug'),
        ),
    ]
