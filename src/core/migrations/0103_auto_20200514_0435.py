# Generated by Django 3.0.3 on 2020-05-14 04:35

import core.models
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0102_workactivity_points'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('code', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_separator', models.BooleanField()),
            ],
            options={
                'verbose_name_plural': 'activities',
                'db_table': 'stafdb_activity',
            },
        ),
        migrations.CreateModel(
            name='ActivityCatalog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'activity catalogs',
                'db_table': 'stafdb_activitycatalog',
            },
        ),
        migrations.CreateModel(
            name='FlowDiagram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stafdb_flowdiagram',
            },
        ),
        migrations.CreateModel(
            name='Geocode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('depth', models.PositiveSmallIntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
            ],
            options={
                'db_table': 'stafdb_geocode',
                'ordering': ['depth', 'id'],
            },
        ),
        migrations.CreateModel(
            name='MaterialCatalog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'stafdb_materialcatalog',
            },
        ),
        migrations.CreateModel(
            name='ReferenceSpace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.CharField(max_length=255, null=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('is_public', models.BooleanField(db_index=True, default=True)),
            ],
            options={
                'db_table': 'stafdb_referencespace',
            },
        ),
        migrations.CreateModel(
            name='UploadSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('meta_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('is_uploaded', models.BooleanField(db_index=True, default=False)),
                ('is_processed', models.BooleanField(db_index=True, default=False)),
                ('is_published', models.BooleanField(db_index=True, default=False)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('is_public', models.BooleanField(db_index=True, default=True)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Project')),
                ('space', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.ReferenceSpace')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'stafdb_uploadsession',
            },
        ),
        migrations.CreateModel(
            name='UploadFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=core.models.shapefile_directory)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UploadSession')),
            ],
            options={
                'db_table': 'stafdb_uploadfile',
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.SlugField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('activities', models.ManyToManyField(db_table='stafdb_sector_activities', to='core.Activity')),
                ('photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Photo')),
            ],
            options={
                'db_table': 'stafdb_sector',
            },
        ),
        migrations.CreateModel(
            name='ReferenceSpaceSector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Sector')),
                ('space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sectors', to='core.ReferenceSpace')),
            ],
            options={
                'db_table': 'stafdb_referencespacesector',
            },
        ),
        migrations.CreateModel(
            name='ReferenceSpaceLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('start', models.DateField(blank=True, db_index=True, null=True)),
                ('end', models.DateField(blank=True, db_index=True, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ReferenceSpace')),
            ],
            options={
                'db_table': 'stafdb_referencespace_location',
                'ordering': ['-start'],
            },
        ),
        migrations.CreateModel(
            name='ReferenceSpaceGeocode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('geocode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Geocode')),
                ('space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ReferenceSpace')),
            ],
            options={
                'db_table': 'stafdb_referencespace_geocode',
            },
        ),
        migrations.AddField(
            model_name='referencespace',
            name='geocodes',
            field=models.ManyToManyField(through='core.ReferenceSpaceGeocode', to='core.Geocode'),
        ),
        migrations.AddField(
            model_name='referencespace',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.ReferenceSpaceLocation'),
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(db_index=True)),
                ('code', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('catalog', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.MaterialCatalog')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.Material')),
            ],
            options={
                'db_table': 'stafdb_material',
            },
        ),
        migrations.CreateModel(
            name='GeocodeScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('is_comprehensive', models.BooleanField(db_index=True, default=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('icon', models.CharField(blank=True, max_length=50, null=True)),
                ('coverage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.ReferenceSpace')),
            ],
            options={
                'db_table': 'stafdb_geocode_scheme',
            },
        ),
        migrations.AddField(
            model_name='geocode',
            name='scheme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geocodes', to='core.GeocodeScheme'),
        ),
        migrations.CreateModel(
            name='FlowBlocks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin_label', models.CharField(blank=True, max_length=255, null=True)),
                ('destination_label', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks_to', to='core.Activity')),
                ('diagram', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='core.FlowDiagram')),
                ('origin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks_from', to='core.Activity')),
            ],
            options={
                'db_table': 'stafdb_flowblocks',
            },
        ),
        migrations.AddField(
            model_name='activity',
            name='catalog',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ActivityCatalog'),
        ),
        migrations.AddField(
            model_name='activity',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.Activity'),
        ),
        migrations.AlterField(
            model_name='activatedspace',
            name='space',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ReferenceSpace'),
        ),
        migrations.AlterField(
            model_name='photo',
            name='space',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_gallery', to='core.ReferenceSpace'),
        ),
        migrations.AlterField(
            model_name='record',
            name='sectors',
            field=models.ManyToManyField(blank=True, to='core.Sector'),
        ),
        migrations.AlterField(
            model_name='record',
            name='spaces',
            field=models.ManyToManyField(blank=True, to='core.ReferenceSpace'),
        ),
    ]
